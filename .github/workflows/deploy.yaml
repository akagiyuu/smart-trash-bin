on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Develop
        uses: actions/checkout@v3
        
      - name: DockerHub Login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build Image And Push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          build-args: |
            VITE_API_URL=https://trashcan-api.${{ secrets.HOST_NAME }}
            VITE_WS_URL=wss://trashcan-api.${{ secrets.HOST_NAME }}
            VITE_TRASH_LEVEL_THRESHOLD=$VITE_TRASH_LEVEL_THRESHOLD
          push: true
          tags: akagiyuu/smart-trash-bin-frontend:latest

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Develop
        uses: actions/checkout@v3
        
      - name: DockerHub Login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Build Image And Push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: akagiyuu/smart-trash-bin-backend:latest
  
  deploy:
    name: Deploy
    runs-on: smart-trashcan
    needs: [build-frontend, build-backend]
    env:
      POSTGRES_USER: ${{ secret.PG_USER }}
      POSTGRES_PASSWORD: ${{ secret.PG_PASSWORD }}
      POSTGRES_DB: ${{ secret.PG_DB }}
      PGADMIN_DEFAULT_EMAIL: ${{ secret.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ secret.PGADMIN_DEFAULT_PASSWORD }}
      DATABASE_URL: "postgres://${{ secret.PG_USER }}:${{ secret.PG_PASSWORD }}@database/${{ secret.PG_DB }}"
      SENDER_EMAIL: ${{ secret.SENDER_EMAIL }}
      PUBLIC_CORS_DOMAIN: https://trashcan-client.${{ secret.HOST_NAME }}
      SENDER_PASSWORD: ${{ secret.SENDER_PASSWORD }}
      RECEIVER_EMAIL: ${{ secret.RECEIVER_EMAIL }}
    steps:
    - name: Checkout Develop
      uses: actions/checkout@v3

    - name: DockerHub Login
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

    - name: Clean Container, Image And Prepare For Deploy
      run: docker compose down --rmi all -v

    - name: Deploy Socket
      run: docker compose up -d
